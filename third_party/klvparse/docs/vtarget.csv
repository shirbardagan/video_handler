1, Target Centroid Pixel Number, center, 0x01
2, Target Bounding Box Top Left Pixel Number, top_left, 0x02
3, Target Bounding Box Bottom Right Pixel Number, bottom_right, 0x03
4, Target Priority, priority, 0x04
5, Target Confidence Level, confidence, 0x05
6, New Detection Flag / Target History, history, 0x06
7, Percentage of Target Pixels, bbox_fill_percentage, 0x07
8, Target Color, color, 0x08
9, Target Intensity, intensity, 0x09
10, Target Location Latitude Offset, latitude_offset, 0x0a
11, Target Location Longitude Offset, longitude_offset, 0x0b
12, Target Height, height, 0x0c
13, Bounding Box Top Left Latitude Offset, top_left_latitude, 0x0d
14, Bounding Box Top Left Longitude Offset, top_left_longitude, 0x0e
15, Bounding Box Bottom Right Latitude Offset, bottom_right_latitude, 0x0f
16, Bounding Box Bottom Right Longitude Offset, bottom_right_longitude, 0x10
17, Target Location, location, 0x11
18, Target Boundary, boundary, 0x12
19, Target Centroid Pixel Row, y, 0x13
20, Target Centroid Pixel Column, x, 0x14
21, FPA Index, fpa, 0x15
101, VMask LS, mask, 0x65
102, VObject LS, object, 0x66
103, VFeature LS, feature, 0x67
104, VTracker LS, tracker, 0x68
105, VChip LS, chip, 0x69
106, VChip LS, chip_series, 0x6a




(.+), (.+), (.+), (.+)
    
    /**
     *  $4 - $1 - $3
     */
    bool vtarget_$3_parser(ByteReader &reader, nl::json *res, std::weak_ptr<nl::json> storage);